openapi: 3.0.0
info:
  title: Event Management API
  version: 1.0.0
  description: |
    API for managing users, events, registrations, and tickets.
    Authentication is done via session cookies containing user ID.

servers:
  - url: https://planora-2nk8.onrender.com/
    description: Production server
  - url: http://localhost:5000
    description: Local development server

paths:
  /api/auth/register:
    post:
      summary: Create new user
      description: Register a user and create a session cookie.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
      responses:
        "201":
          description: User created successfully with session cookie set.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid input

  /api/auth/login:
    post:
      summary: Authenticate user
      description: Login user and set a session cookie.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: Login successful, session cookie set.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized - invalid credentials

  /api/auth/logout:
    post:
      summary: Logout user
      description: Clears the session cookie.
      responses:
        "204":
          description: Logout successful, session cookie cleared.

  /api/auth/me:
    get:
      summary: Get current authenticated user info
      description: |
        Returns info about the current user based on session cookie.
        Returns 401 if no valid session cookie is present.
      responses:
        "200":
          description: Current user info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized - no valid session cookie

  /api/events:
    get:
      summary: List all events
      parameters:
        - in: query
          name: upcoming
          schema:
            type: boolean
          description: Filter to only upcoming events
      responses:
        "200":
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"

    post:
      summary: Create new event
      description: Creates event; requires a valid session cookie.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventInput"
      responses:
        "201":
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "401":
          description: Unauthorized - no valid session cookie

  /api/events/{eventId}:
    parameters:
      - in: path
        name: eventId
        required: true
        schema:
          type: string
        description: Event ID

    get:
      summary: Get event details
      responses:
        "200":
          description: Event details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDetails"
        "404":
          description: Event not found

    put:
      summary: Update event (creator only)
      description: Requires session cookie; only event creator can update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventInput"
      responses:
        "200":
          description: Event updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "401":
          description: Unauthorized or not owner
        "404":
          description: Event not found

    delete:
      summary: Delete event (creator only)
      description: Requires session cookie; only event creator can delete.
      responses:
        "204":
          description: Event deleted successfully
        "401":
          description: Unauthorized or not owner
        "404":
          description: Event not found

  /api/events/{eventId}/register:
    post:
      summary: Register user for event
      description: Requires session cookie; registers current user.
      responses:
        "201":
          description: Registration successful
        "400":
          description: Already registered or invalid
        "401":
          description: Unauthorized
        "404":
          description: Event not found

  /api/events/{eventId}/attendees:
    get:
      summary: Get list of attendees (creator only)
      description: Requires session cookie; only event creator can view.
      responses:
        "200":
          description: List of attendees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized or not owner
        "404":
          description: Event not found

  /api/events/{eventId}/tickets:
    get:
      summary: Get ticket options for event
      responses:
        "200":
          description: List of ticket types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TicketOption"
        "404":
          description: Event not found

    post:
      summary: Buy ticket for event
      description: Requires session cookie; purchase ticket for current user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TicketPurchaseInput"
      responses:
        "201":
          description: Ticket purchase successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticket"
        "400":
          description: Invalid purchase or sold out
        "401":
          description: Unauthorized
        "404":
          description: Event not found

  /api/tickets/{ticketId}:
    get:
      summary: View ticket details
      description: Requires session cookie; only ticket owner can view.
      parameters:
        - in: path
          name: ticketId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ticket details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticket"
        "401":
          description: Unauthorized or not owner
        "404":
          description: Ticket not found

components:
  schemas:
    UserRegister:
      type: object
      required:
        - email
        - password
        - username
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        username:
          type: string

    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        username:
          type: string

    EventInput:
      type: object
      required:
        - title
        - description
        - date
      properties:
        title:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
        location:
          type: string
        price:
          type: number
          format: float

    Event:
      allOf:
        - $ref: "#/components/schemas/EventInput"
        - type: object
          properties:
            id:
              type: integer
            creatorId:
              type: integer

    EventDetails:
      allOf:
        - $ref: "#/components/schemas/Event"
        - type: object
          properties:
            ticketsAvailable:
              type: integer
            attendeesCount:
              type: integer

    TicketOption:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: float
        quantityAvailable:
          type: integer

    TicketPurchaseInput:
      type: object
      required:
        - ticketOptionId
        - quantity
      properties:
        ticketOptionId:
          type: integer
        quantity:
          type: integer
          minimum: 1

    Ticket:
      type: object
      properties:
        id:
          type: integer
        eventId:
          type: integer
        ticketOptionId:
          type: integer
        ownerId:
          type: integer
        purchaseDate:
          type: string
          format: date-time
        qrCodeUrl:
          type: string
